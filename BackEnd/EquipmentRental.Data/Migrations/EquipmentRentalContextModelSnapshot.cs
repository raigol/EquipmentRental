// <auto-generated />
using EquipmentRental.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EquipmentRental.Data.Migrations
{
    [DbContext(typeof(EquipmentRentalContext))]
    partial class EquipmentRentalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EquipmentRental.Data.Domain.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Name = "Test Customer"
                        });
                });

            modelBuilder.Entity("EquipmentRental.Data.Domain.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId");

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            EquipmentId = 1,
                            Name = "Caterpillar bulldozer",
                            Type = 1
                        },
                        new
                        {
                            EquipmentId = 2,
                            Name = "KamAZ truck",
                            Type = 0
                        },
                        new
                        {
                            EquipmentId = 3,
                            Name = "Komatsu crane",
                            Type = 1
                        },
                        new
                        {
                            EquipmentId = 4,
                            Name = "Volvo steamroller",
                            Type = 0
                        },
                        new
                        {
                            EquipmentId = 5,
                            Name = "Bosch jackhammer",
                            Type = 2
                        });
                });

            modelBuilder.Entity("EquipmentRental.Data.Domain.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("InvoiceSum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LoyaltyPoints")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("EquipmentRental.Data.Domain.InvoiceRow", b =>
                {
                    b.Property<int>("InvoiceRowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Equipment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<decimal>("RowSum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("InvoiceRowId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceRow");
                });

            modelBuilder.Entity("EquipmentRental.Data.Domain.Rental", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("RentalId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId", "EquipmentId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("EquipmentRental.Data.Domain.Invoice", b =>
                {
                    b.HasOne("EquipmentRental.Data.Domain.Customer", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("EquipmentRental.Data.Domain.InvoiceRow", b =>
                {
                    b.HasOne("EquipmentRental.Data.Domain.Invoice", "Invoice")
                        .WithMany("InvoiceRows")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");
                });

            modelBuilder.Entity("EquipmentRental.Data.Domain.Rental", b =>
                {
                    b.HasOne("EquipmentRental.Data.Domain.Customer", "Customer")
                        .WithMany("Rentals")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EquipmentRental.Data.Domain.Equipment", "Equipment")
                        .WithMany("Rentals")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("EquipmentRental.Data.Domain.Customer", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("EquipmentRental.Data.Domain.Equipment", b =>
                {
                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("EquipmentRental.Data.Domain.Invoice", b =>
                {
                    b.Navigation("InvoiceRows");
                });
#pragma warning restore 612, 618
        }
    }
}
